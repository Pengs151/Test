{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Ricardo Molina\\\\Documents\\\\Projects\\\\React\\\\Test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Ricardo Molina\\\\Documents\\\\Projects\\\\React\\\\Test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Ricardo Molina\\\\Documents\\\\Projects\\\\React\\\\Test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Ricardo Molina\\\\Documents\\\\Projects\\\\React\\\\Test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Ricardo Molina\\\\Documents\\\\Projects\\\\React\\\\Test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Ricardo Molina\\\\Documents\\\\Projects\\\\React\\\\Test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ricardo Molina\\\\Documents\\\\Projects\\\\React\\\\Test\\\\src\\\\components\\\\TextArea.jsx\";\nimport React, { Component } from 'react';\nimport './Jumbotron.css';\n\nvar TextArea =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TextArea, _Component);\n\n  function TextArea(props) {\n    var _this;\n\n    _classCallCheck(this, TextArea);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TextArea).call(this, props));\n    _this.state = {\n      input: \"\"\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmiut = _this.handleSubmiut.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TextArea, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        value: event.target.value\n      });\n      this.updateInput(this.props.TextLabel, event);\n    }\n  }, {\n    key: \"handleSubmiut\",\n    value: function handleSubmiut(event) {\n      event.preventDefault();\n    }\n  }, {\n    key: \"updateInput\",\n    value: function updateInput(key, event) {\n      console.log(key); // this.setState({input: event.target.value});\n\n      localStorage.setItem(key, event.target.value);\n    }\n  }, {\n    key: \"checkValue\",\n    value: function checkValue(key) {\n      if (localStorage.hasOwnProperty(key)) {\n        this.setState({\n          value: localStorage.getItem(key)\n        });\n        console.log(localStorage.getItem(key));\n        console.log(\"hellooo\");\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.checkValue(this.props.Text);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        class: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"input-group-prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        class: \"input-group-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, this.props.TextLabel)), React.createElement(\"textarea\", {\n        class: \"form-control\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        \"aria-label\": \"With textarea\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TextArea;\n}(Component);\n\nexport { TextArea as default };","map":{"version":3,"sources":["C:\\Users\\Ricardo Molina\\Documents\\Projects\\React\\Test\\src\\components\\TextArea.jsx"],"names":["React","Component","TextArea","props","state","input","handleChange","bind","handleSubmiut","event","setState","value","target","updateInput","TextLabel","preventDefault","key","console","log","localStorage","setItem","hasOwnProperty","getItem","checkValue","Text"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,iBAAP;;IAEqBC,Q;;;;;AACjB,oBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAC;AAAP,KAAb;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AACA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBD,IAAnB,uDAArB;AAJc;AAKf;;;;iCACYE,K,EAAM;AACjB,WAAKC,QAAL,CAAc;AAACC,QAAAA,KAAK,EAAEF,KAAK,CAACG,MAAN,CAAaD;AAArB,OAAd;AACA,WAAKE,WAAL,CAAiB,KAAKV,KAAL,CAAWW,SAA5B,EAAuCL,KAAvC;AACD;;;kCAEaA,K,EAAM;AAClBA,MAAAA,KAAK,CAACM,cAAN;AACD;;;gCAEWC,G,EAAKP,K,EAAM;AACrBQ,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EADqB,CAEtB;;AACCG,MAAAA,YAAY,CAACC,OAAb,CAAqBJ,GAArB,EAAyBP,KAAK,CAACG,MAAN,CAAaD,KAAtC;AACD;;;+BAGUK,G,EAAI;AACb,UAAGG,YAAY,CAACE,cAAb,CAA4BL,GAA5B,CAAH,EAAoC;AAClC,aAAKN,QAAL,CAAc;AAAEC,UAAAA,KAAK,EAACQ,YAAY,CAACG,OAAb,CAAqBN,GAArB;AAAR,SAAd;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYC,YAAY,CAACG,OAAb,CAAqBN,GAArB,CAAZ;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;AACA;;;wCAEgB;AACjB,WAAKK,UAAL,CAAgB,KAAKpB,KAAL,CAAWqB,IAA3B;AACD;;;6BACM;AACL,aACI;AAAK,QAAA,KAAK,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,KAAK,EAAC,qBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,KAAK,EAAC,kBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgC,KAAKrB,KAAL,CAAWW,SAA3C,CADF,CADA,EAIA;AAAU,QAAA,KAAK,EAAC,cAAhB;AAAgC,QAAA,KAAK,EAAE,KAAKV,KAAL,CAAWO,KAAlD;AAAyD,QAAA,QAAQ,EAAE,KAAKL,YAAxE;AAAsF,sBAAW,eAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJA,CADJ;AASH;;;;EA5CiCL,S;;SAAjBC,Q","sourcesContent":["import React, {Component} from 'react';\r\nimport './Jumbotron.css';\r\n\r\nexport default class TextArea extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {input:\"\"};\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmiut = this.handleSubmiut.bind(this);\r\n      }\r\n      handleChange(event){\r\n        this.setState({value: event.target.value});\r\n        this.updateInput(this.props.TextLabel, event);\r\n      }\r\n    \r\n      handleSubmiut(event){\r\n        event.preventDefault();\r\n      }\r\n    \r\n      updateInput(key, event){\r\n        console.log(key);\r\n       // this.setState({input: event.target.value});\r\n        localStorage.setItem(key,event.target.value);\r\n      }\r\n        \r\n      \r\n      checkValue(key){\r\n        if(localStorage.hasOwnProperty(key)){\r\n          this.setState({ value:localStorage.getItem(key)});\r\n          console.log(localStorage.getItem(key));\r\n          console.log(\"hellooo\");\r\n        }\r\n        }\r\n        \r\n      componentDidMount(){\r\n        this.checkValue(this.props.Text);\r\n      }\r\n    render() {\r\n        return (\r\n            <div class=\"input-group\">\r\n            <div class=\"input-group-prepend\">\r\n              <span class=\"input-group-text\">{this.props.TextLabel}</span>\r\n            </div>\r\n            <textarea class=\"form-control\"  value={this.state.value} onChange={this.handleChange} aria-label=\"With textarea\"></textarea>\r\n            \r\n          </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}